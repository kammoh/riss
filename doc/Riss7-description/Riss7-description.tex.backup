\documentclass[conference]{IEEEtran}
% packages
\usepackage{xspace}
\usepackage{hyperref}
\usepackage{todonotes}
\usepackage{tikz}
\usepackage[utf8]{inputenc}

%  commands
% \newcommand{\todo}[1]{$\langle\!\langle$\marginpar[\raggedleft$\triangleright\triangleright\triangleright$]{$\triangleleft\triangleleft\triangleleft$}\textsf{#1}$\rangle\!\rangle$}
\def\CC{{C\nolinebreak[4]\hspace{-.05em}\raisebox{.4ex}{\tiny\bf ++}}}
\def\ea{\,et\,al.\ }

\begin{document}
	
% paper title
\title{Riss 7}

% author names and affiliations
% use a multiple column layout for up to three different
% affiliations
\author{
\IEEEauthorblockN{Norbert Manthey}
\IEEEauthorblockA{Dresden,\\ Germany}
}

\maketitle

\def\coprocessor{\textsc{Coprocessor}\xspace}
\def\glucose{\textsc{Glucose~2.2}\xspace}
\def\minisat{\textsc{Minisat~2.2}\xspace}
\def\riss{\textsc{Riss}\xspace}

% the abstract is optional
\begin{abstract}
The sequential SAT solver \riss combines the Minisat-style solving engine of \glucose with a state-of-the-art preprocessor \textsc{Coprocessor} and adds many modifications to the search process. 
\riss allows to use inprocessing based on \coprocessor.
Most recent changes focus mainly in incremental solving.
\end{abstract}

\section{Introduction}

The CDCL solver \riss is a highly configurable SAT solver based on \textsc{Minisat}~\cite{EenS:2003} and \glucose ~\cite{AudemardS:2009,Audemard:2012:RRS:2405292.2405308}. 
Besides many search algorithm extensions, \riss is equipped with the preprocessor \textsc{Coprocessor}~\cite{Manthey:2012}. 
The solvers supports, emitting DRAT proofs for many techniques, enumerating more than a single model, and incremental solving.

This document mentions only the differences to \textsc{riss 6} that has been submitted to SAT Competition 2016. 
% 
Most differences are motivated by axiom pinpointing with SAT~\cite{MaPR16} that involves incremental SAT solving with many calls to the solver, where each single call has many assumption literals, and only a few conflicts.

\section{Modifications of the Search}

\textsc{Riss 6} used automatic configuration based on formula features. This capability has been dropped. 

\section{Incremental SAT Solving with Riss}

\textsc{Riss 6} used simplification that have been applied lazily during calls to the solver.
These simplifications have been disabled.
The two configurations that have been submitted for the incremental track: \riss 5.21 uses formula simplification only during the first incremental call, while \riss 6 uses inprocessing with very long intermediate intervals, starting after the first 5000 conflicts. 


\section{SAT Competition Specifics}

\riss and \coprocessor are implemented in \CC. 
\riss is submitted to all sequential tracks, except the \emph{random SAT} track.

\section{Availability}

All tools in the solver collection are available for research. 
The source of \riss will be made publicly available under the LGPL v2 license at \url{https://github.com/nmanthey/riss-solver}.

\section*{Acknowledgment}
The author would like to thank the developers of \glucose and \minisat. 
The computational resources to develop, evaluate and configure the SAT solver have been provided by the ZIH of TU Dresden. 
This project is supported by the DFG grant HO 1294/11-1. 

% \bigskip
% What should not be in the system description:
% \begin{enumerate}
%   \item Basic definitions related to SAT. (However, any formal notations used in the description should be defined.)
%   \item Empirical results on the solver's performance.
% \end{enumerate}
% 
\bibliographystyle{IEEEtran}
\bibliography{local}

\end{document}



% more infos

current priss call: (especially the independent flag can be combined with other configuration presents to run independent solvers in parallel without communication)

./priss -threads=4 -showUnusedParam -pIncSetup=[3]-independent -addSetup -ppconfig="Riss427:plain_XOR:-cp3_iters=2 -ee -cp3_ee_level=3 -cp3_ee_it -rlevel=2 -bve_early" -psetup=delta
